gain %>%
mutate(fungicide = factor(fungicide, levels = c("MANC", "AZOX+TEBU", "TFLX+PROT", "TEBU",  "TFLX+TEBU",  "PYRA+EPOX"))) %>%
ggplot(aes(efficacy, yld)) +
geom_errorbar(aes(ymin = yld_lower, ymax = yld_upper, color = fungicide), alpha = 0.8, width=0, size= 0.8)+
geom_errorbarh(aes(xmin = efficacy_lw, xmax = efficacy_up, color = fungicide), alpha = 0.8, height= 0, size= 0.8)+
geom_point(aes(efficacy, yld, color = fungicide), size = 3)+
#scale_y_continuous(breaks=c(100, 200, 300, 400,500,600,700,800), limits=c(100,800))+
scale_x_continuous(breaks=c(30,40,50,60,70), limits=c(30,70))+
theme_minimal_grid()+
scale_color_calc()+
labs(y = "Yield return (kg/ha)", x = "Efficacy (%)", color = "Fungicide")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12, face = "bold"),
legend.position = "right",
legend.title.align = 0.5,
legend.title = element_text(size=12, face = "bold"))
ggsave("Figures/index_yld.png", dpi = 500, height=5, width=8)
library(cowplot)
library(ggrepel)
library(tidyverse)
library(here)
yld = read_excel(here("data","mv_yld_region.xlsx"))
index = read_excel(here("data","efficacy_index_region.xlsx"))
gain = full_join(index, yld, by = c("fungicide", "class"))
gain %>%
mutate(class = case_when(
class == "North" ~ "Tropical",
class == "South" ~ "Subtropical")) %>%
mutate(fungicide = factor(fungicide, levels = c("MANC", "AZOX+TEBU", "TFLX+PROT", "TEBU",  "TFLX+TEBU",  "PYRA+EPOX"))) %>%
ggplot(aes(mean_eff, mean_yld)) +
geom_errorbar(aes(ymin = lower_yld, ymax = upper_yld, color = fungicide), alpha = 0.8, width=0, size= 0.8)+
geom_errorbarh(aes(xmin = lower_eff, xmax = upper_eff, color = fungicide), alpha = 0.8, height= 0, size= 0.8)+
geom_point(aes(mean_eff, mean_yld, color = fungicide), size = 3)+
#scale_y_continuous(breaks=c(100, 200, 300, 400,500,600,700,800), limits=c(100,800))+
#scale_x_continuous(breaks=c(30,40,50,60,70), limits=c(30,70))+
theme_minimal_grid()+
scale_color_calc()+
labs(y = "Yield return (kg/ha)", x = "Efficacy (%)", color = "Fungicide")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12, face = "bold"),
legend.position = "right",
legend.title.align = 0.5,
strip.text.x = element_text(size = 14, face = "bold"),
legend.title = element_text(size=12, face = "bold"))+
facet_grid(~class)
ggsave("Figures/index_yld_region.png", dpi = 500, height=5, width=10)
yld = read_excel(here("data","mv_yld_region.xlsx"))
index = read_excel(here("data","efficacy_index_region.xlsx"))
yld
index
gain = full_join(index, yld, by = c("fungicide", "class"))
gain
library(cowplot)
library(ggrepel)
library(tidyverse)
library(here)
yld = read_excel(here("data","mv_yld_region.xlsx"))
index = read_excel(here("data","efficacy_index_region.xlsx"))
gain = full_join(index, yld, by = c("fungicide", "class"))
gain %>%
mutate(class = case_when(
class == "North" ~ "Tropical",
class == "South" ~ "Subtropical")) %>%
mutate(fungicide = factor(fungicide, levels = c("MANC", "AZOX+TEBU", "TFLX+PROT", "TEBU",  "TFLX+TEBU",  "PYRA+EPOX"))) %>%
ggplot(aes(mean_eff, mean_yld)) +
geom_errorbar(aes(ymin = lower_yld, ymax = upper_yld, color = fungicide), alpha = 0.8, width=0, size= 0.8)+
geom_errorbarh(aes(xmin = lower_eff, xmax = upper_eff, color = fungicide), alpha = 0.8, height= 0, size= 0.8)+
geom_point(aes(mean_eff, mean_yld, color = fungicide), size = 3)+
#scale_y_continuous(breaks=c(100, 200, 300, 400,500,600,700,800), limits=c(100,800))+
#scale_x_continuous(breaks=c(30,40,50,60,70), limits=c(30,70))+
theme_minimal_grid()+
scale_color_calc()+
labs(y = "Yield return (kg/ha)", x = "Efficacy (%)", color = "Fungicide")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12, face = "bold"),
legend.position = "right",
legend.title.align = 0.5,
strip.text.x = element_text(size = 14, face = "bold"),
legend.title = element_text(size=12, face = "bold"))+
facet_grid(~class)
ggsave("Figures/index_yld_region.png", dpi = 500, height=5, width=10)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(tidyverse)
library(metafor)
library(janitor)
library(readr)
library(here)
wb_index <- read_csv("data/dat_index.csv")
wb_index = wb_index %>%
filter(vi_index>0.0001) %>%
group_by(study, year, location, state) %>%
mutate(n2 = n()) %>%
filter(n2 != 1)
summary(wb_index$vi_index)
tabyl(wb_index$active_ingredient)
mv_index <- rma.mv(log_index, vi_index,
mods = ~active_ingredient,
random = list(~active_ingredient | factor(study)),
struct = "HCS",
method = "ML",
data = wb_index
)
mv_index
#Calcule the efficacy of each fungicide
efficacy_index <- data.frame(cbind(
(1 - exp(mv_index$b)) * 100,
(1 - exp(mv_index$ci.lb)) * 100,
(1 - exp(mv_index$ci.ub)) * 100))
#Organize the data.frame
efficacy_index = efficacy_index
names (efficacy_index) = c("efficacy", "efficacy_up", "efficacy_lw")
efficacy_index = efficacy_index %>%
mutate(fungicide = c("check", "AZOX+TEBU", "MANC", "PYRA+EPOX", "TEBU","TFLX+PROT", "TFLX+TEBU")) %>%
filter(fungicide != "check") %>%
select(fungicide, efficacy, efficacy_lw, efficacy_up)
efficacy_index
#write_csv(efficacy_index, "data/efficacy_index.csv")
openxlsx::write.xlsx(efficacy_index, here("data","efficacy_index.xlsx"), colNames = TRUE)
#Fit the linear contrasts between the fungicides and get the P-values by 'anova' function
anova(mv_index, L = rbind(
c(0, 1,-1, 0, 0, 0, 0),
c(0, 1, 0,-1, 0, 0, 0),
c(0, 1, 0, 0,-1, 0, 0),
c(0, 1, 0, 0, 0,-1, 0),
c(0, 1, 0, 0, 0, 0,-1),
c(0, 0, 1,-1, 0, 0, 0),
c(0, 0, 1, 0,-1, 0, 0),
c(0, 0, 1, 0, 0,-1, 0),
c(0, 0, 1, 0, 0, 0,-1),
c(0, 0, 0, 1,-1, 0, 0),
c(0, 0, 0, 1, 0,-1, 0),
c(0, 0, 0, 1, 0, 0,-1),
c(0, 0, 0, 0, 1,-1, 0),
c(0, 0, 0, 0, 1, 0,-1),
c(0, 0, 0, 0, 0, 1,-1)))
#Fit the model with YEAR as a mod varible
# wb_sev1 <- wb_severity %>%
#   filter(mean_sev > 0) %>%
#   filter(vi_sev > 0.001)
mv_index_year <- rma.mv(log_index, vi_index,
mods = ~active_ingredient*year,
random = list(~active_ingredient | factor(study)),
struct = "HCS",
method = "ML",
#control = list(optimizer = "nlm"),
data = wb_index  %>% mutate(year= year - 2012))
mv_index_year
anova(mv_index_year, btt = 9:14) #Colocar o numero de linha da interação
mv_index_region <- rma.mv(log_index, vi_index,
mods = ~ active_ingredient*region,
random = list(~active_ingredient | factor(study)),
struct = "HCS",
method = "ML",
#control = list(optimizer = "nlm"),
data = wb_index
)
mv_index_region
anova(mv_index_region, btt = 9:14)
reg1 = data.frame(mv_index_region$beta, mv_index_region$ci.lb, mv_index_region$ci.ub, mv_index_region$se) %>%
rownames_to_column("trat") %>%
separate(trat, into = c("lado1", "lado2"), sep = ":") %>%
separate(lado2, into = c("lixo","lado3"),sep = "region" ) %>%
select(-lixo) %>%
separate(lado1, into = c("lixo","lado1"),sep = "active_ingredient") %>%
select(-lixo) %>%
filter(lado1 != "NA") %>%
mutate(n = seq(1:12))
names(reg1) = c("fungicide", "region", "mean_log", "ci.lb_log", "ci.ub_log", "SE_eff","n")
reg2 = reg1 %>%
filter(n < 7) %>%
mutate(region = rep("Tropical", length(fungicide)))
reg3 = reg1 %>%
filter(n > 6) %>%
mutate(region = rep("Subtropical", length(fungicide)))
reg4 = rbind(reg2,reg3) %>%
select(-"n")
openxlsx::write.xlsx(reg4, here("data","eff_log_region.xlsx"), colNames = TRUE)
reg1 = data.frame(mv_index_region$beta, mv_index_region$ci.lb, mv_index_region$ci.ub) %>%
rownames_to_column("trat") %>%
separate(trat, into = c("lado1", "lado2"), sep = ":") %>%
separate(lado2, into = c("lixo","lado3"),sep = "region" ) %>%
select(-lixo) %>%
separate(lado1, into = c("lixo","lado1"),sep = "active_ingredient" ) %>%
select(-lixo) %>%
filter(lado1 != "NA") %>%
mutate(n = seq(1:12))
names(reg1) = c("fungicide", "region", "mean", "ci.lb", "ci.ub", "n")
reg2 = reg1 %>%
filter(n < 7) %>%
mutate(region = rep("North", 6))
reg3 = reg1 %>%
filter(n > 6) %>%
mutate(region = rep("South", 6))
reg4 = rbind(reg2,reg3)
mean = reg4%>%
group_by(fungicide) %>%
select(1:3) %>%
spread(region, mean) %>%
mutate(mean = (1-exp((North + South)))*100) %>%
select(1,4)
upper = reg4%>%
group_by(fungicide) %>%
select(1,2,4) %>%
spread(region, ci.lb) %>%
mutate(upper = (1-exp((North + South)))*100) %>%
select(1,4)
lower = reg4%>%
group_by(fungicide) %>%
select(1,2,5) %>%
spread(region, ci.ub) %>%
mutate(lower = (1-exp((North + South)))*100) %>%
select(1,4)
South = left_join(mean, lower, by= c("fungicide")) %>%
left_join(upper, by = c("fungicide")) %>%
mutate(region = rep("South", length("fungicide"))) %>%
select("fungicide", "region", "mean", "lower", "upper")
#Distransformando as estimativas para região Norte. A primera saida
North = reg4 %>%
filter(region == "North") %>%
group_by(fungicide, region) %>%
summarise(mean = (1-exp(mean))*100,
lower = (1-exp(ci.ub))*100,
upper = (1-exp(ci.lb))*100)
reg6 = rbind(North,South)
names(reg6) = c("fungicide", "class", "mean_eff", "lower_eff", "upper_eff")
reg6
#write_csv(reg6, "data/efficacy_sev_region.csv")
openxlsx::write.xlsx(reg6, here("data","efficacy_index_region.xlsx"), colNames = TRUE)
wb_index <- read_csv("data/dat_index.csv") %>%
group_by(study, year, location, state) %>%
mutate(n2 = n()) %>%
filter(n2 != 1)
wb_index
wb_index1 = wb_index %>%
group_by(study) %>%
summarise(active_ingredient1=paste(active_ingredient, collapse=';'))
wb_index1 %>%
tabyl(active_ingredient1)
design1 = wb_index %>%
group_by(study) %>%
filter(active_ingredient  %in% c("AACHECK", "AZOX+TEBU", "MANC", "PYRA+EPOX","TEBU", "TFLX+PROT", "TFLX+TEBU")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(1, length(active_ingredient))) %>%
filter(n2 == 7) %>%
filter(n3 == 7)
design1
design2 = wb_index %>%
group_by(study) %>%
filter(active_ingredient  %in% c("AACHECK", "AZOX+TEBU", "PYRA+EPOX", "TEBU", "TFLX+PROT", "TFLX+TEBU")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(2, length(active_ingredient))) %>%
filter(n2 == 6) %>%
filter(n3 == 6)
design2
design3 = wb_index %>%
group_by(study) %>%
filter(active_ingredient  %in% c("AACHECK", "AZOX+TEBU", "MANC", "TEBU", "TFLX+PROT", "TFLX+TEBU")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(3, length(active_ingredient))) %>%
filter(n2 == 6) %>%
filter(n3 == 6)
design3
design4 = wb_index %>%
group_by(study) %>%
filter(active_ingredient  %in% c("AACHECK", "AZOX+TEBU", "MANC", "TFLX+PROT", "TFLX+TEBU")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(4, length(active_ingredient))) %>%
filter(n2 == 5) %>%
filter(n3 == 5)
design4
design5 = wb_index %>%
group_by(study) %>%
filter(active_ingredient  %in% c("AACHECK", "MANC", "PYRA+EPOX", "TFLX+PROT", "TFLX+TEBU")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(5, length(active_ingredient))) %>%
filter(n2 == 5) %>%
filter(n3 == 5)
design5
design6 = wb_index %>%
group_by(study) %>%
filter(active_ingredient  %in% c("AACHECK", "MANC", "TEBU", "TFLX+PROT", "TFLX+TEBU")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(6, length(active_ingredient))) %>%
filter(n2 == 5) %>%
filter(n3 == 5)
design6
design7 = wb_index %>%
group_by(study) %>%
filter(active_ingredient  %in% c("AACHECK", "MANC", "TFLX+PROT", "TFLX+TEBU")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(7, length(active_ingredient))) %>%
filter(n2 == 4) %>%
filter(n3 == 4)
design7
design8 = wb_index %>%
group_by(study) %>%
filter(active_ingredient  %in% c("AACHECK", "TFLX+PROT", "TFLX+TEBU")) %>%
mutate(n3 = n()) %>%
mutate(design = rep(8, length(active_ingredient))) %>%
filter(n2 == 3) %>%
filter(n3 == 3)
design8
wb_sev_design = rbind(design1, design2, design3, design4, design5, design6, design7, design8)
wb_sev_design %>%
group_by(study,design) %>%
summarize() %>%
tabyl(design)
library(metafor)
wb_sev_design = wb_sev_design %>%
filter(vi_index>0.0001)
mv_design <- rma.mv(log_index, vi_index,
mods = ~ active_ingredient*design,
random = list(~ 1 | study / design / active_ingredient),
struct = "HCS",
method = "ML",
#control = list(optimizer = "nlm"),
data = wb_sev_design
)
mv_design
anova(mv_design, btt = 9:14)
library(cowplot)
library(ggrepel)
library(tidyverse)
library(here)
yld = read_excel(here("data","mv_yld_region.xlsx"))
index = read_excel(here("data","efficacy_index_region.xlsx"))
yld
index
yld = read_excel(here("data","mv_yld_region.xlsx"))
yld
library(tidyverse)
library(metafor)
library(janitor)
library(here)
wb_yld <- read_csv("data/dat_yld.csv")
wb_yld
library(metafor)
mv_yld_region <- rma.mv(mean_yld, vi_yld,
mods = ~active_ingredient * as.factor(region),
random = list(~active_ingredient | factor(study)),
struct = "UN",
method = "ML",
control = list(optimizer = "nlm"),
data = wb_yld
)
mv_yld_region
anova(mv_yld_region, btt = 9:14)
reg1 = data.frame(mv_yld_region$beta, mv_yld_region$ci.lb, mv_yld_region$ci.ub, mv_yld_region$se) %>%
rownames_to_column("trat") %>%
separate(trat, into = c("lado1", "lado2"), sep = ":") %>%
separate(lado2, into = c("lixo","lado3"),sep = "region") %>%
select(-lixo) %>%
separate(lado1, into = c("lixo","lado1"),sep = "active_ingredient" ) %>%
select(-lixo) %>%
filter(lado1 != "NA") %>%
mutate(n = seq(1:12))
names(reg1) = c("fungicide", "region", "mean_yld", "ci.lb_yld", "ci.ub_yld", "SE_yld","n")
reg2 = reg1 %>%
filter(n < 7) %>%
mutate(region = rep("Tropical", length(fungicide)))
reg3 = reg1 %>%
filter(n > 6) %>%
mutate(region = rep("Subtropical", length(fungicide)))
reg4 = rbind(reg2,reg3) %>%
select(-"n")
openxlsx::write.xlsx(reg4, here("data","yld_SE_region.xlsx"), colNames = TRUE)
reg1 = data.frame(mv_yld_region$beta, mv_yld_region$ci.lb, mv_yld_region$ci.ub) %>%
rownames_to_column("trat") %>%
separate(trat, into = c("lado1", "lado2"), sep = ":") %>%
separate(lado2, into = c("lixo","lado3"), sep = "ind_check_class") %>%
select(-lixo) %>%
separate(lado1, into = c("lixo","lado1"),sep = "active_ingredient" ) %>%
select(-lixo) %>%
filter(lado1 != "NA") %>%
mutate(n = seq(1:12))
names(reg1) = c("fungicide", "class", "mean", "ci.lb", "ci.ub", "n")
reg2 = reg1 %>%
filter(n < 7) %>%
mutate(class = rep("North", 6))
reg3 = reg1 %>%
filter(n > 6) %>%
mutate(class = rep("South", 6))
reg4 = rbind(reg2,reg3)
mean = reg4%>%
group_by(fungicide) %>%
select(1:3) %>%
spread(class, mean) %>%
mutate(mean = North + South) %>%
select(1,4)
lower = reg4%>%
group_by(fungicide) %>%
select(1,2,4) %>%
spread(class, ci.lb) %>%
mutate(lower = North + South) %>%
select(1,4)
upper = reg4%>%
group_by(fungicide) %>%
select(1,2,5) %>%
spread(class, ci.ub) %>%
mutate(upper = North + South) %>%
select(1,4)
reg5 = left_join(mean, lower, by= c("fungicide")) %>%
left_join(upper, by = c("fungicide")) %>%
mutate(class = rep("South", length("fungicide"))) %>%
select("fungicide", "class", "mean", "lower", "upper")
High = reg4 %>%
filter(class == "North") %>%
select(1:5)
names(High) = c("fungicide", "class", "mean", "lower", "upper")
reg6 = full_join(High,reg5)
names(reg6) = c("fungicide", "class", "mean_yld", "lower_yld", "upper_yld")
reg6
#write_csv(reg6, "data/mv_yld_region.csv")
openxlsx::write.xlsx(reg6, here("data","mv_yld_region.xlsx"), colNames = TRUE)
library(cowplot)
library(ggrepel)
library(tidyverse)
library(here)
yld = read_excel(here("data","mv_yld_region.xlsx"))
index = read_excel(here("data","efficacy_index_region.xlsx"))
gain = full_join(index, yld, by = c("fungicide", "class"))
gain %>%
mutate(class = case_when(
class == "North" ~ "Tropical",
class == "South" ~ "Subtropical")) %>%
mutate(fungicide = factor(fungicide, levels = c("MANC", "AZOX+TEBU", "TFLX+PROT", "TEBU",  "TFLX+TEBU",  "PYRA+EPOX"))) %>%
ggplot(aes(mean_eff, mean_yld)) +
geom_errorbar(aes(ymin = lower_yld, ymax = upper_yld, color = fungicide), alpha = 0.8, width=0, size= 0.8)+
geom_errorbarh(aes(xmin = lower_eff, xmax = upper_eff, color = fungicide), alpha = 0.8, height= 0, size= 0.8)+
geom_point(aes(mean_eff, mean_yld, color = fungicide), size = 3)+
#scale_y_continuous(breaks=c(100, 200, 300, 400,500,600,700,800), limits=c(100,800))+
#scale_x_continuous(breaks=c(30,40,50,60,70), limits=c(30,70))+
theme_minimal_grid()+
scale_color_calc()+
labs(y = "Yield return (kg/ha)", x = "Efficacy (%)", color = "Fungicide")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12, face = "bold"),
legend.position = "right",
legend.title.align = 0.5,
strip.text.x = element_text(size = 14, face = "bold"),
legend.title = element_text(size=12, face = "bold"))+
facet_grid(~class)
ggsave("Figures/index_yld_region.png", dpi = 500, height=5, width=10)
library(tidyverse)
library(readr)
library(ggthemes)
library(cowplot)
library(gsheet)
wb_expl_plot = read.csv("data/wheat_blast_data.csv")
#Filter data for means observations of each variable
wb_expl_plot = wb_expl_plot %>%
dplyr::select(study, year, location, state, region, brand_name, active_ingredient, mean_sev, mean_inc, mean_yld, mean_index, sev_check, inc_check, index_check, yld_check)
# dplyr::mutate(ef_control_sev = ((sev_check - mean_sev)/sev_check)*100) %>%
# dplyr::mutate(efi_control_sev = case_when(ef_control_sev <0 ~ "0",
#                                            TRUE ~ as.character(ef_control_sev))) %>%
# dplyr::mutate(efi_control_sev = as.numeric(efi_control_sev)) %>%
# dplyr::select(-ef_control_sev)
wb_expl_plot
library(cowplot)
library(ggrepel)
library(tidyverse)
library(here)
yld = read_excel(here("data","mv_yld_region.xlsx"))
library(cowplot)
library(ggrepel)
library(tidyverse)
library(here)
yld = read_excel(here("data","mv_yld_region.xlsx"))
library(tidyverse)
library(metafor)
library(ggthemes)
library(cowplot)
library(scales)
library(knitr)
library(broom)
library(dplyr)
library(readxl)
library(gsheet)
library(janitor)
library(magrittr)
library(gsheet)
library(janitor)
library(readr)
library(cowplot)
library(ggrepel)
library(tidyverse)
library(here)
yld = read_excel(here("data","mv_yld_region.xlsx"))
index = read_excel(here("data","efficacy_index_region.xlsx"))
gain = full_join(index, yld, by = c("fungicide", "class"))
gain %>%
mutate(class = case_when(
class == "North" ~ "Tropical",
class == "South" ~ "Subtropical")) %>%
mutate(fungicide = factor(fungicide, levels = c("MANC", "AZOX+TEBU", "TFLX+PROT", "TEBU",  "TFLX+TEBU",  "PYRA+EPOX"))) %>%
ggplot(aes(mean_eff, mean_yld)) +
geom_errorbar(aes(ymin = lower_yld, ymax = upper_yld, color = fungicide), alpha = 0.8, width=0, size= 0.8)+
geom_errorbarh(aes(xmin = lower_eff, xmax = upper_eff, color = fungicide), alpha = 0.8, height= 0, size= 0.8)+
geom_point(aes(mean_eff, mean_yld, color = fungicide), size = 3)+
#scale_y_continuous(breaks=c(100, 200, 300, 400,500,600,700,800), limits=c(100,800))+
#scale_x_continuous(breaks=c(30,40,50,60,70), limits=c(30,70))+
theme_minimal_grid()+
scale_color_colorblind()+
labs(y = "Yield return (kg/ha)", x = "Efficacy (%)", color = "Fungicide")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=12, face = "bold"),
legend.position = "right",
legend.title.align = 0.5,
strip.text.x = element_text(size = 14, face = "bold"),
legend.title = element_text(size=12, face = "bold"))+
facet_grid(~class)
ggsave("Figures/index_yld_region.png", dpi = 500, height=5, width=10)
